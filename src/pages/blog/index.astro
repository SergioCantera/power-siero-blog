---
import Layout from '@layouts/Layout.astro'
import { getAllPosts } from '@lib/cosmic'
import { Image } from 'astro:assets'
import { getFeaturedPost } from '@lib/cosmic'
import TagBadge from '@components/TagBadge.astro'

interface Props {
  title: string
  slug: string
  metadata: {
    excerpt: string
    tags: {
      title: string
      metadata: {
        color?: string
      }
    }[]
    cover_image?: {
      url: string
      imgix_url: string
    }
  }
}

const data = await getAllPosts()
const featuredPost = await getFeaturedPost()
const tags = featuredPost.metadata.tags
---

<Layout title="Blog">
  <h1 class="text-xl md:text-3xl lg:text-4xl font-bold">Blog Posts</h1>
  <div class="my-6"></div>
  <div class="flex flex-col gap-3">
    <section class="flex flex-col lg:flex-row rounded-md bg-white mb-2">
      <a
        href={`blog/${featuredPost.slug}`}
        class="transition-opacity hover:opacity-80 flex flex-row lg:min-h-[200px]">
        {
          featuredPost.metadata.cover_image && (
            <Image
              src={`${featuredPost.metadata.cover_image.imgix_url}?w1200&auto=format,compression`}
              format="webp"
              width={1100}
              height={600}
              alt="Featured Blog Post"
              class={'rounded-t-md lg:rounded-l-md'}
              loading="eager"
              transition:name={`cover-image-${featuredPost.slug}`}
            />
          )
        }
        <div
          class="flex h-auto flex-col gap-y-2 rounded-r-md bg-white dark:bg-zinc-800 p-6 shadow-md">
          <div>
            <h2 class="text-xl md:text-2xl lg:text-3xl font-semibold" transition:name={`title-${featuredPost.title}`}>{featuredPost.title}</h2>
            <p class="text-sm lg:text-lg">{featuredPost.metadata.excerpt}</p>
          </div>
          {
            tags && (
              <div class="flex flex-wrap gap-2 flex-1">
                {tags?.map(
                  (tag: { title: string; metadata: { color?: string } }) => (
                    <TagBadge {...tag} key={tag.title} />
                  )
                )}
              </div>
            )
          }
        </div>
      </a>
    </section>
    <ul class="grid gap-3 md:grid-cols-2">
      {
        data
        .filter((post: Props) => post.title !== featuredPost.title)
        .map((post: Props) => (
        <section class="rounded-md bg-white dark:bg-zinc-800 mb-2">
      <a
        href={`blog/${post.slug}`}
        class="transition-opacity hover:opacity-80 flex flex-row">
        {
          post.metadata.cover_image && (
            <Image
              src={`${post.metadata.cover_image.imgix_url}?w=1200&auto=format,compression`}
              format="webp"
              width={600}
              height={300}
              alt={`Blog post - ${post.title}`}
              class={'rounded-l-md'}
              loading="eager"
              transition:name={`cover-image-${post.slug}`}
            />
          )
        }
        <div
          class="flex h-auto flex-col gap-y-2 rounded-r-md bg-white dark:bg-zinc-800 p-6 shadow-md">
          <div>
            <h2 class="text-xl md:text-2xl lg:text-3xl font-semibold" transition:name={`title-${post.title}`}>{post.title}</h2>
            <p class="text-sm lg:text-lg">{post.metadata.excerpt}</p>
          </div>
          {
            tags && (
              <div class="flex flex-wrap gap-2">
                {tags?.map(
                  (tag: { title: string; metadata: { color?: string } }) => (
                    <TagBadge {...tag} key={tag.title} />
                  )
                )}
              </div>
            )
          }
        </div>
      </a>
    </section>
        ))
    }
    </ul>
  </div>
</Layout>
