---
import {Image} from 'astro:assets'
import TagBadge from './TagBadge.astro'
export interface Post {
  title: string
  slug: string
  metadata: {
    excerpt: string
    tags: {
      title: string
      metadata: {
        color?: string
      }
    }[]
    cover_image?: {
      url: string
      imgix_url: string
    }
  }
}

export interface Props {
  data: Post[]
  featuredPost: Post
}


const {data, featuredPost} = Astro.props
const postLength = data.length
const featuredClass = postLength < 9
 ? "rounded-md bg-white shadow-md transition hover:shadow-xl md:row-start-1 md:col-start-1 md:col-span-4 md:row-span-2"
: "rounded-md bg-white shadow-md transition hover:shadow-xl md:row-start-2 md:col-start-3 md:col-span-4 md:row-span-1"

---
<ul class="grid gap-2 md:grid-cols-6">
  {
    data.map((post: Post) => (
        post.slug !== featuredPost.slug ?
        <li class="rounded-md bg-white shadow-md transition hover:shadow-xl md:col-span-2">
          <a href={`/blog/${post.slug}`}>
          <div class="flex h-full flex-col gap-y-2 p-6">
              <h2 class="pr-4 pt-2 text-xl font-semibold" transition:name={`title-${post.title}`}>
                {post.title}
              </h2>
              <p>
                {post.metadata.excerpt}
              </p>
                {
                  post.metadata.tags && (
                    <div class="flex flex-wrap gap-1">
                      {post.metadata.tags?.map(
                        (tag: { title: string; metadata: { color?: string } }) => (
                          <TagBadge {...tag} key={tag.title} />
                        )
                      )}
                    </div>
                  )
                }
              </div>
            </a>
        </li>
        :     
        <li class={featuredClass}>
            <a
            href={`blog/${featuredPost.slug}`}
            class="transition-opacity hover:opacity-80">
            {
              featuredPost.metadata.cover_image && (
                <Image
                  src={`${featuredPost.metadata.cover_image.imgix_url}?w=1200&auto=format,compression`}
                  format="webp"
                  width={1200}
                  height={575}
                  alt="Featured Blog Post"
                  class={'rounded-t-md'}
                  loading="eager"
                  transition:name={`cover-image-${featuredPost.slug}`}
                />
              )
            }
            <div
              class="flex h-fit flex-col gap-y-2 rounded-md bg-white p-6 shadow-md">
              <h2 class="text-3xl font-semibold" transition:name={`title-${post.title}`}>{post.title}</h2>
              <p class="text-lg">{post.metadata.excerpt}</p>
            
              {
                post.metadata.tags && (
                  <div class="flex flex-wrap gap-1">
                    {post.metadata.tags?.map(
                      (tag: { title: string; metadata: { color?: string } }) => (
                        <TagBadge {...tag} key={tag.title} />
                      )
                    )}
                  </div>
                )
              }
            </div>
          </a>
        </li>
    ))
  } 
  
</ul>