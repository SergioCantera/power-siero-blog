---
import Arrow from '@components/icons/Arrow.astro'
import Git from '@components/icons/Git.astro'

export interface Project {
  name: string
  isActive: boolean
  description: string
  url?: string
  github?: string
  highlights: string[]
}

const {name, isActive, description, url, github, highlights } = Astro.props
---

<div role="contentinfo" class="grid-span-1 relative flex flex-col rounded-md bg-white p-5 shadow-md hover:shadow-xl dark:bg-zinc-800">
  <div class="flex items-center justify-between space-x-[10px]">
    <div class="flex items-center gap-2">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder size-4">
        <path d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z" />
      </svg>
      <div class="flex items-center gap-[6px]">
        {isActive ? (
          <a class="hover:text-skin-hue group flex items-center gap-[6px] text-lg decoration-dotted underline-offset-[5px] hover:underline" href={url} title={`Ver ${name}`} target="_blank">
            {name}
            <span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
              <Arrow />
            </span>
          </a>
        ) : (
          <span class="text-lg">{name}</span>
        )}
      </div>
    </div>

    {github && (
      <a href={github} title="View repository on GitHub" target="_blank" rel="noopener noreferrer" class="opacity-75 transition-opacity duration-100 hover:opacity-100">
        <Git />
      </a>
    )}
  </div>

  <p class="py-3 text-sm text-skin-base">{description}</p>
  <ul class="mt-1 text-sm text-skin-muted">
    {highlights.map((highlight:string) => {
      return <li>{highlight}</li>;
    })}
  </ul>
</div>